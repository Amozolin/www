#lang racket
(require "../translate.rkt")
(require rackunit)
(check-equal? (translate '(let ((x 0)) x))
              '(let ((_ 0)) (address 0)))
(check-equal? (translate '(let ((x 0)) (let ((y 1)) x)))
              '(let ((_ 0)) (let ((_ 1)) (address 1))))
(check-equal? (translate '(let ((x 0)) (let ((y 1)) y)))
              '(let ((_ 0)) (let ((_ 1)) (address 0))))
(check-equal? (translate '(let ((x 0))
                            (let ((y x))
                              y)))
              '(let ((_ 0))
                 (let ((_ (address 0)))
                   (address 0))))
